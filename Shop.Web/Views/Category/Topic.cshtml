@model Shop.Web.Models.Category.CategoryTopicModel
@using Shop.Web.Models;

@using Microsoft.AspNetCore.Identity
@using Shop.Data.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<div class="container body-content">
    <div class="sectionHeader">
        <div class="sectionHeading">
            <h3><span id="results">@Model.Category.Name</span><h3 />
        </div>
        <div class="row">
            <div class="col-md-8 sectionDescription">
                <div class="categoryLogo" style="background-image: url(@Model.Category.ImageUrl); background-size:100%"></div>
                <p>Welcome to the <strong>@Model.Category.Name</strong> section</p>
                <p>
                    Please read the Category Guidelines before ordering a product.
                </p>
            </div>
            <div class="col-md-4">
                <form asp-controller="Category" asp-action="Search" method="post">
                    <div class="searchForm">
                        <input asp-for="SearchQuery" type="text" placeholder="Search..." class="searchBar" onfocus="clearThis(this)">
                        <button type="submit" class="btn btn-categorySearch">
                            <i class="material-icons">search</i>
                        </button>
                    </div>
                    <input asp-for="Category.Id" name="id" type="hidden" />
                </form>

                <form asp-controller="Category" asp-action="Topic" method="post">
                    <div class="searchForm">
                        @*не могу подключить модель FilterState через asp-for*@
                        @* почему мне надо обернуть input отдельно в form чтобы отправлять данные.
                        Почему я не могу использовать два input в одной форме и отправлять данные?  *@

                        <input type="text" name="MinPrice" placeholder="Min price" class="searchBar" onfocus="clearThis(this)">
                    </div>
                </form>
                <form asp-controller="Category" asp-action="Topic" method="post">
                    <div class="searchForm">
                        <input type="text" name="MaxPrice" placeholder="Max price" class="searchBar" onfocus="clearThis(this)">
                    </div>
                </form>
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item dropdown active">
                        <a class="nav-link dropdown-toggle" id="drop" role="b tton" data-bs-toggle="dropdown" aria-expanded="false"
                           asp-controller="Category" asp-action="Index">Sorting</a>
                        <div class="dropdown-menu" aria-labelledby="drop">
                            <a class="dropdown-item" asp-controller="Category" asp-action="Topic" asp-route-sortOrder="@SortState.None">
                                None
                            </a>
                            <a class="dropdown-item" asp-controller="Category" asp-action="Topic" asp-route-sortOrder="@SortState.PriceAsc">
                                Ascending
                            </a>
                            <a class="dropdown-item" asp-controller="Category" asp-action="Topic" asp-route-sortOrder="@SortState.PriceDesc">
                                Descending
                            </a>
                            @*@await Component.InvokeAsync("CategoriesName");*@
                        </div>

                    </li>
                </ul>



            </div>
        </div>
        @if (User.IsInRole("Admin"))
        {
            <div class="row">
                <div class="col-md-11"></div>
                <div class="col-md-1">
                    <div class="row" style="margin-bottom:16px;">
                        <a class="btn btn-default" asp-controller="Category" asp-action="Edit" asp-route-id="@Model.Category.Id">Edit</a>
                    </div>
                    <div class="row">
                        <form asp-controller="Category" asp-action="Delete" method="post">

                            <input type="hidden" asp-for="Category.Id" value="@Model.Category.Id" name="id" />
                            <input type="submit" class="btn btn-danger" value="Delete" onclick="return confirm('Are sure you want to delete category?');" />
                        </form>
                        @*@Html.ActionLink("Delete", "Delete", new { id = @Model.Category.Id },
                    new { onclick = "return confirm('Are sure you want to delete category?');", @class="btn btn-danger" })*@
                    </div>
                </div>
            </div>
        }
    </div>
    @if (User.IsInRole("Admin"))
    {
        <div class="newFood">
            <a class="btn btn-block btn-default" asp-controller="Food" asp-action="New" asp-route-categoryId="@Model.Category.Id">New food</a>
        </div>
    }
    <div class="row" id="categoryIndexContent">
        @if (Model.Foods.Any())
        {
            <table class="table table-hover table-bordered" id="categoryIndexTable">
                <tbody>
                    @foreach (var food in Model.Foods)
                    {
                        <tr>
                            <td>
                                @Html.Partial("FoodSummary",food)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else if (string.IsNullOrEmpty(@Model.SearchQuery) || string.IsNullOrWhiteSpace(Model.SearchQuery))
        {
            <div class="noFoods">
                <i class="material-icons md-72">question_answer</i>
                <h3>
                    No search results found for @Model.SearchQuery! <br />
                </h3>
            </div>

        }

        else if (!@Model.Foods.Any())
        {
            <div class="noFoods">
                <i class="material-icons md-72">question_answer</i>
                <h3>
                    It looks like there are no @Model.Category.Name products yet. <br />
                </h3>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function clearThis(target) {
            target.value = "";
        }
    </script>
}
